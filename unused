#!/usr/bin/env -S python3 -B
# %SUMMARY: ⌇⡢⡺⢕⣔
# %USAGE: $ ./$0

import os
from os.path import relpath
from pathlib import Path
from typing import Iterator


def collect_symlinks(*roots: str | Path) -> Iterator[Path]:
    stack = [x for r in roots for x in os.scandir(r)]
    while stack:
        x = stack.pop(0)
        if x.is_dir():
            if x.is_symlink():
                assert os.readlink(x).startswith("../"), (x, os.readlink(x))
                yield Path(x)
            else:
                stack += os.scandir(x)


def main() -> None:
    dnvim = Path(__import__("sys").argv[0]).parent / "nvim"
    allrepos = list(sorted((dnvim / "all").iterdir()))
    linked = list(collect_symlinks(dnvim / "lazy"))
    linked += collect_symlinks(dnvim / "preload")
    linknames = set(x.name for x in linked)

    tmp = Path(dnvim / "unused")
    tmp.mkdir(parents=True, exist_ok=True)

    unused = [Path(relpath(x, str(tmp))) for x in allrepos if x.name not in linknames]
    for x in unused:
        dst = tmp / x.name
        dst.symlink_to(x)


if __name__ == "__main__":
    main()
